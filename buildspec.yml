version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      #- $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 803282840586.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world
      - IMAGE_REPO_NAME=hello-world #defined in Build environmnet
      - REPOSITORY_URI=803282840586.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world # $IMAGE_REPO_NAME defined in Build environment
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - pwd
      - ls -alh
      - echo ${IMAGE_TAG}
      - echo ${IMAGE_REPO_NAME}
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t 803282840586.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world:${IMAGE_TAG} .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 803282840586.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world:${IMAGE_TAG}
      - echo Writing image definitions file...
      - sed -i "s|{{imageID}}|${IMAGE_TAG}|" taskdef.json
      - printf '[{"name":"%s","imageUri":"%s"}]' hello-world 803282840586.dkr.ecr.ap-southeast-2.amazonaws.com/hello-world:${IMAGE_TAG} > imagedefinitions.json
      - aws ecs register-task-definition --execution-role-arn arn:aws:iam::803282840586:role/ecs_task_execution_role --cli-input-json file://taskdef.json --region ap-southeast-2
      - aws ecs update-service --cluster cluster-test --service hello-world --task-definition arn:aws:ecs:ap-southeast-2:803282840586:task-definition/hello-world --region ap-southeast-2
artifacts:
  files: imagedefinitions.json
